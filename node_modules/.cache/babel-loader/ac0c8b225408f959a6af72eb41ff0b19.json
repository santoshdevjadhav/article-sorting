{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lcom21/Downloads/task/src/App.js\",\n    _s = $RefreshSig$();\n\nimport data from \"./data.json\";\nimport ListItem from \"@material-ui/core/ListItem\"; // import ListItemText from \"@material-ui/core/ListItemText\";\n\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles(() => ({\n  heading: {\n    padding: \"10px\"\n  },\n  title: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction App(props) {\n  _s();\n\n  const classes = useStyles(props);\n\n  function sortUpVotes(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\") list = data.sort((a, b) => parseFloat(b.upVotes) - parseFloat(a.upVotes));else list = data.sort((a, b) => parseFloat(a.upVotes) - parseFloat(b.upVotes));\n  }\n\n  function sortByDate(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\") list = data.sort(function (a, b) {\n      return new Date(a.date) - new Date(b.date);\n    });else list = data.sort(function (a, b) {\n      return new Date(b.date) - new Date(a.date);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.heading,\n            children: \"Sorting Articles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              children: \"UpVotes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), data.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            children: item.upVotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lcom21/Downloads/task/src/App.js"],"names":["data","ListItem","List","Typography","makeStyles","Paper","Grid","useStyles","heading","padding","title","textAlign","App","props","classes","sortUpVotes","sortBy","list","sort","a","b","parseFloat","upVotes","sortByDate","Date","date","map","item","index"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC,OAAO;AAClCI,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GADyB;AAIlCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAJ2B,CAAP,CAAD,CAA5B;;AASA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGP,SAAS,CAACM,KAAD,CAAzB;;AACA,WAASE,WAAT,CAAqBC,MAAM,GAAG,MAA9B,EAAsC;AACpC,QAAIC,IAAI,GAAG,EAAX;AACA,QAAID,MAAM,KAAK,MAAf,EACEC,IAAI,GAAGjB,IAAI,CAACkB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACD,CAAC,CAACE,OAAH,CAAV,GAAwBD,UAAU,CAACF,CAAC,CAACG,OAAH,CAAtD,CAAP,CADF,KAGEL,IAAI,GAAGjB,IAAI,CAACkB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACF,CAAC,CAACG,OAAH,CAAV,GAAwBD,UAAU,CAACD,CAAC,CAACE,OAAH,CAAtD,CAAP;AACH;;AACD,WAASC,UAAT,CAAoBP,MAAM,GAAG,MAA7B,EAAqC;AACnC,QAAIC,IAAI,GAAG,EAAX;AACA,QAAID,MAAM,KAAK,MAAf,EACEC,IAAI,GAAGjB,IAAI,CAACkB,IAAL,CAAU,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC/B,aAAO,IAAII,IAAJ,CAASL,CAAC,CAACM,IAAX,IAAmB,IAAID,IAAJ,CAASJ,CAAC,CAACK,IAAX,CAA1B;AACD,KAFM,CAAP,CADF,KAKER,IAAI,GAAGjB,IAAI,CAACkB,IAAL,CAAU,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC/B,aAAO,IAAII,IAAJ,CAASJ,CAAC,CAACK,IAAX,IAAmB,IAAID,IAAJ,CAASL,CAAC,CAACM,IAAX,CAA1B;AACD,KAFM,CAAP;AAGH;;AACD,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,KAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEX,OAAO,CAACN,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA,kCACL,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,kBADK,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEM,OAAO,CAACJ,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEI,OAAO,CAACJ,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEI,OAAO,CAACJ,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,EAwBGV,IAAI,CAAC0B,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEd,OAAO,CAACJ,KAA/B;AAAA,sBAAuCiB,IAAI,CAACjB;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEI,OAAO,CAACJ,KAA/B;AAAA,sBAAuCiB,IAAI,CAACL;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAER,OAAO,CAACJ,KAA/B;AAAA,sBAAuCiB,IAAI,CAACF;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAAqBG,KAArB;AAAA;AAAA;AAAA;AAAA,cADD,CAxBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GA9DQhB,G;UACSL,S;;;KADTK,G;AAgET,eAAeA,GAAf","sourcesContent":["import data from \"./data.json\";\nimport ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles(() => ({\n  heading: {\n    padding: \"10px\",\n  },\n  title: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles(props);\n  function sortUpVotes(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\")\n      list = data.sort((a, b) => parseFloat(b.upVotes) - parseFloat(a.upVotes));\n    else\n      list = data.sort((a, b) => parseFloat(a.upVotes) - parseFloat(b.upVotes));\n  }\n  function sortByDate(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\")\n      list = data.sort(function (a, b) {\n        return new Date(a.date) - new Date(b.date);\n      });\n    else\n      list = data.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      });\n  }\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12}>\n          <Paper>\n            <Typography className={classes.heading}>\n              Sorting Articles\n            </Typography>\n          </Paper>\n        </Grid>\n        <Paper>\n          <Grid container>\n\t\t\t  <Grid item xs={4}>\n\n\t\t\t  </Grid>\n            <Grid item xs={4}>\n              <Typography className={classes.title}>Title</Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography className={classes.title}>UpVotes</Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography className={classes.title}>Date</Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n        {data.map((item, index) => (\n          <Grid container key={index}>\n            <Grid item xs={4}>\n              <Typography className={classes.title}>{item.title}</Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography className={classes.title}>{item.upVotes}</Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <Typography className={classes.title}>{item.date}</Typography>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}