{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lcom21/Downloads/task/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport data from \"./data.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles(() => ({\n  heading: {\n    padding: \"20px\",\n    boxShadow: \"0 0 0 0\",\n    borderRadius: \"0px\",\n    fontSize: \"20px\",\n    fontWeight: \"bolder\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginTop: \"10px\",\n    borderRadius: \"0px\",\n    boxShadow: \"0 0 0 0\",\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    backgroundColor: \"#ef7e7e\"\n  },\n  listItem: {\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  button: {\n    margin: \"15px\",\n    color: \"black\",\n    backgroundColor: \"#ef7e7e\"\n  },\n  root: {\n    overflow: \"hidden\",\n    height: \"626px\"\n  },\n  list: {\n    overflow: \"auto\",\n    height: \"calc(100vh - 100px - 32px)\",\n    width: \"100%\"\n  }\n}));\n\nfunction App(props) {\n  _s();\n\n  const classes = useStyles(props);\n  const [state, setState] = useState({\n    filterList: data\n  });\n  const {\n    filterList\n  } = state;\n\n  function sortByUpVotes(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\") list = data.sort((a, b) => parseFloat(b.upVotes) - parseFloat(a.upVotes));else list = data.sort((a, b) => parseFloat(a.upVotes) - parseFloat(b.upVotes));\n    setState(prevState => ({ ...prevState,\n      filterList: list\n    }));\n  }\n\n  function sortByDate(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\") list = data.sort(function (a, b) {\n      return new Date(a.date) - new Date(b.date);\n    });else list = data.sort(function (a, b) {\n      return new Date(b.date) - new Date(a.date);\n    });\n    setState(prevState => ({ ...prevState,\n      filterList: list\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"flex-end\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              md: 8,\n              lg: 10,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: \"Sorting Articles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 2,\n              xs: 6,\n              md: 2,\n              lg: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => sortByUpVotes(),\n                variant: \"contained\",\n                className: classes.button,\n                children: \"UpVotes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 2,\n              md: 2,\n              lg: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => sortByDate(),\n                variant: \"contained\",\n                className: classes.button,\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.title,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.title,\n            children: \"UpVotes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.title,\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.list,\n        children: filterList.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.listItem,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.listItem,\n              children: item.upVotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.listItem,\n              children: new Date(item.date).toLocaleDateString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ygzk4/HayTpJNek10uyWs52uyU0=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lcom21/Downloads/task/src/App.js"],"names":["React","useState","data","makeStyles","Button","Typography","Paper","Grid","useStyles","heading","padding","boxShadow","borderRadius","fontSize","fontWeight","title","textAlign","marginTop","paddingTop","paddingBottom","backgroundColor","listItem","button","margin","color","root","overflow","height","list","width","App","props","classes","state","setState","filterList","sortByUpVotes","sortBy","sort","a","b","parseFloat","upVotes","prevState","sortByDate","Date","date","map","item","index","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport data from \"./data.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles(() => ({\n  heading: {\n    padding: \"20px\",\n    boxShadow: \"0 0 0 0\",\n    borderRadius: \"0px\",\n    fontSize: \"20px\",\n    fontWeight: \"bolder\",\n  },\n  title: {\n    textAlign: \"center\",\n    marginTop: \"10px\",\n    borderRadius: \"0px\",\n    boxShadow: \"0 0 0 0\",\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    backgroundColor: \"#ef7e7e\",\n  },\n  listItem: { textAlign: \"center\", marginTop: \"10px\" },\n  button: { margin: \"15px\", color: \"black\", backgroundColor: \"#ef7e7e\" },\n  root: { overflow: \"hidden\", height: \"626px\" },\n  list: {\n    overflow: \"auto\",\n    height: \"calc(100vh - 100px - 32px)\",\n    width: \"100%\",\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles(props);\n  const [state, setState] = useState({ filterList: data });\n  const { filterList } = state;\n  function sortByUpVotes(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\")\n      list = data.sort((a, b) => parseFloat(b.upVotes) - parseFloat(a.upVotes));\n    else\n      list = data.sort((a, b) => parseFloat(a.upVotes) - parseFloat(b.upVotes));\n    setState((prevState) => ({ ...prevState, filterList: list }));\n  }\n\n  function sortByDate(sortBy = \"desc\") {\n    let list = [];\n    if (sortBy === \"desc\")\n      list = data.sort(function (a, b) {\n        return new Date(a.date) - new Date(b.date);\n      });\n    else\n      list = data.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      });\n    setState((prevState) => ({ ...prevState, filterList: list }));\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Paper elevation={4}>\n            <Grid container justify=\"flex-end\">\n              <Grid item xs={12} sm={8} md={8} lg={10}>\n                <Typography className={classes.heading}>\n                  Sorting Articles\n                </Typography>\n              </Grid>\n              <Grid item sm={2} xs={6} md={2} lg={1}>\n                <Button\n                  onClick={() => sortByUpVotes()}\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  UpVotes\n                </Button>\n              </Grid>\n              <Grid item xs={6} sm={2} md={2} lg={1}>\n                <Button\n                  onClick={() => sortByDate()}\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  Date\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid container>\n          <Grid item xs={4}>\n            <Paper className={classes.title}>Title</Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper className={classes.title}>UpVotes</Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper className={classes.title}>Date</Paper>\n          </Grid>\n        </Grid>\n        <div className={classes.list}>\n          {filterList.map((item, index) => (\n            <Grid container key={index}>\n              <Grid item xs={4}>\n                <Typography className={classes.listItem}>\n                  {item.title}\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography className={classes.listItem}>\n                  {item.upVotes}\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography className={classes.listItem}>\n                  {new Date(item.date).toLocaleDateString}\n                </Typography>\n              </Grid>\n            </Grid>\n          ))}\n        </div>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}